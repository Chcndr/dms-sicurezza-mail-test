name: "\uD83D\uDD10 Generate Token and Send Email"\non:\n  workflow_dispatch:\n    inputs:\n      recipient_email:\n        description: "Email destinatario"\n        required: true\n        type: string\n      access_area:\n        description: "Area di accesso (es. admin, viewer)"\n        required: true\n        default: "admin"\n        type: string\n      duration_minutes:\n        description: "Durata sessione in minuti"\n        required: true\n        default: "60"\n        type: string\n\njobs:\n  generate-and-send:\n    runs-on: ubuntu-latest\n    steps:\n    - name: "\uD83D\uDCE5 Checkout repository"\n      uses: actions/checkout@v4\n\n    - name: "\uD83D\uDC0D Setup Python"\n      uses: actions/setup-python@v4\n      with:\n        python-version: \'3.11\'\n\n    - name: "\uD83D\uDCE6 Install dependencies"\n      run: pip install PyJWT\n\n    - name: "\uD83D\uDD10 Generate JWT Token"\n      id: generate_token\n      env:\n        JWT_SECRET: ${{ secrets.DMS_JWT_SECRET }}\n        RECIPIENT_EMAIL: ${{ github.event.inputs.recipient_email }}\n        ACCESS_AREA: ${{ github.event.inputs.access_area }}\n        DURATION_MINUTES: ${{ github.event.inputs.duration_minutes }}\n      run: |\n        python3 << \'EOF\'\n        import jwt\n        import os\n        import json\n        from datetime import datetime, timedelta, timezone\n        import uuid\n\n        # Configuration\n        JWT_SECRET = os.environ[\'JWT_SECRET\']\n        JWT_ISSUER = "dms-sicurezza-mail-test"\n        RECIPIENT_EMAIL = os.environ[\'RECIPIENT_EMAIL\']\n        ACCESS_AREA = os.environ[\'ACCESS_AREA\']\n        DURATION_MINUTES = int(os.environ[\'DURATION_MINUTES\'])\n\n        # Timestamps\n        now = datetime.now(timezone.utc)\n        token_expires = now + timedelta(hours=24)\n\n        # Payload\n        payload = {\n            "iss": JWT_ISSUER,\n            "sub": RECIPIENT_EMAIL,\n            "iat": int(now.timestamp()),\n            "exp": int(token_expires.timestamp()),\n            "jti": str(uuid.uuid4()),\n            "area": ACCESS_AREA,\n            "session_duration_minutes": DURATION_MINUTES\n        }\n\n        # Generate token\n        token = jwt.encode(payload, JWT_SECRET, algorithm="HS256")\n\n        # Create access link\n        base_url = "https://chcndr.github.io/dms-sicurezza-mail-test"\n        access_link = f"{base_url}/landing/viewer/index.html?token={token}"\n\n        print(f"::set-output name=access_link::{access_link}")\n        print(f"::set-output name=subject_line::\uD83D\uDD10 DMS Security - Accesso {ACCESS_AREA.upper()} ({DURATION_MINUTES} min)")\n        EOF\n\n    - name: "\uD83D\uDCE7 Trigger Send Email Workflow"\n      uses: benc-uk/workflow-dispatch@v1\n      with:\n        workflow: send_access_email.yml\n        token: ${{ secrets.GITHUB_TOKEN }}\n        inputs: \'{ "recipient_email": "${{ github.event.inputs.recipient_email }}", "access_link": "${{ steps.generate_token.outputs.access_link }}", "subject_line": "${{ steps.generate_token.outputs.subject_line }}" }\'\n
